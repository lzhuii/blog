[{"content":"系统配置 软件 1 dnf install -y tar vim wget 网络 1 2 vim /etc/hosts 192.168.1.10 data 防火墙 1 2 3 4 systemctl stop firewalld systemctl disable firewalld setenforce 0 iptables -F 用户 1 2 3 4 5 6 7 8 9 10 11 mkdir /user useradd -d /user/hadoop -m hadoop passwd hadoop visudo hadoop ALL=(ALL) NOPASSWD: ALL su hadoop ssh-keygen -t rsa -P \u0026#39;\u0026#39; -f ~/.ssh/id_rsa cat ~/.ssh/id_rsa.pub \u0026gt;\u0026gt; ~/.ssh/authorized_keys chmod 0600 ~/.ssh/authorized_keys 组件安装 Java https://www.oracle.com/cn/java/technologies/javase/javase8u211-later-archive-downloads.html\n1 2 3 4 5 6 7 8 9 tar xvf jdk-8u381-linux-x64.tar.gz sudo mv jdk1.8.0_381 /opt/java sudo vim /etc/profile.d/server.sh # JAVA export JAVA_HOME=/opt/java export PATH=$PATH:$JAVA_HOME/bin source /etc/profile MySQL 1 2 3 4 5 6 7 8 sudo dnf install -y mysql-server sudo systemctl start mysqld sudo systemctl enable mysqld sudo mysqladmin -u root -p password mysql -uroot -p123456 create database metastore; exit Hadoop 1 2 3 4 5 6 7 8 9 10 tar xvf hadoop-3.3.6.tar.gz sudo mv hadoop-3.3.6 /opt/hadoop sudo vim /etc/profile.d/server.sh # HADOOP export HADOOP_HOME=/opt/hadoop export PATH=$PATH:$HADOOP_HOME/bin export PATH=$PATH:$HADOOP_HOME/sbin source /etc/profile $HADOOP_HOME/etc/hadoop/workers\n1 data $HADOOP_HOME/etc/hadoop/hadoop-env.sh\n1 export JAVA_HOME=/opt/java $HADOOP_HOME/etc/hadoop/core-site.xml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;fs.defaultFS\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;hdfs://data:9000\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hadoop.tmp.dir\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;/opt/hadoop/tmp\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hadoop.proxyuser.hadoop.hosts\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;*\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hadoop.proxyuser.hadoop.groups\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;*\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; $HADOOP_HOME/etc/hadoop/hdfs-site.xml\n1 2 3 4 5 6 \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;dfs.replication\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;1\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; $HADOOP_HOME/etc/hadoop/mapred-site.xml\n1 2 3 4 5 6 7 8 9 10 \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;mapreduce.framework.name\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;yarn\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;mapreduce.application.classpath\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/*:$HADOOP_MAPRED_HOME/share/hadoop/mapreduce/lib/*\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; $HADOOP_HOME/etc/hadoop/yarn-site.xml\n1 2 3 4 5 6 7 8 9 10 \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;yarn.nodemanager.aux-services\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;mapreduce_shuffle\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;yarn.nodemanager.env-whitelist\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ,HADOOP_MAPRED_HOME\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; 1 2 3 4 5 hdfs namenode -format start-dfs.sh start-yarn.sh hdfs dfs -mkdir -p /user/{hadoop,hive/warehouse,tez} hdfs dfs -chown -R hadoop:hadoop /user Tez 1 2 3 4 tar xvf apache-tez-0.10.2-bin.tar.gz sudo mv apache-tez-0.10.2-bin /opt/tez cd /opt/tez/share hdfs dfs -put tez.tar.gz /user/tez $HADOOP_HOME/etc/hadoop/tez-site.xml\n1 2 3 4 5 6 \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;tez.lib.uris\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;${fs.defaultFS}/user/tez/tez.tar.gz\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; 1 2 3 4 vim $HADOOP_HOME/etc/hadoop/hadoop-env.sh export TEZ_HOME=/opt/tez export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:$TEZ_HOME/*:$TEZ_HOME/lib/* Hive 1 2 3 4 5 6 7 8 9 tar xvf apache-hive-3.1.3-bin.tar.gz sudo mv apache-hive-3.1.3-bin /opt/hive sudo vim /etc/profile.d/server.sh # HIVE export HIVE_HOME=/opt/hive export PATH=$PATH:$HIVE_HOME/bin source /etc/profile $HIVE_HOME/conf/hive-site.xml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;javax.jdo.option.ConnectionURL\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;jdbc:mysql://127.0.0.1:3306/metastore?useSSL=false\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;javax.jdo.option.ConnectionDriverName\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;com.mysql.jdbc.Driver\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;javax.jdo.option.ConnectionUserName\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;root\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;javax.jdo.option.ConnectionPassword\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;123456\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.metastore.schema.verification\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;false\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.metastore.event.db.notification.api.auth\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;false\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.metastore.warehouse.dir\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;/user/hive/warehouse\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.metastore.uris\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;thrift://data:9083\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.server2.thrift.bind.host\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;data\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.server2.thrift.port\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;10000\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.cli.print.header\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;true\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.cli.print.current.db\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;true\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.execution.engine\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;tez\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; 1 2 3 4 5 6 wget -O $HIVE_HOME/lib/mysql-connector-java-5.1.49.jar https://oss.lzhui.top/common/mysql-connector-java-5.1.49.jar schematool -initSchema -dbType mysql -verbose mkdir -p $HIVE_HOME/log nohup hive --service metastore \u0026gt; $HIVE_HOME/log/metastore.log 2\u0026gt;\u0026amp;1 \u0026amp; nohup hive --service hiveserver2 \u0026gt; $HIVE_HOME/log/hiveserver2.log 2\u0026gt;\u0026amp;1 \u0026amp; beeline -u jdbc:hive2://data:10000 -n hadoop HBase Spark 1 2 3 4 5 6 7 8 9 tar xvf spark-3.5.0-bin-hadoop3-scala2.13.tgz sudo mv spark-3.5.0-bin-hadoop3-scala2.13 /opt/spark sudo vim /etc/profile.d/server.sh # SPARK export SPARK_HOME=/opt/spark export PATH=$PATH:$SPARK_HOME/bin source /etc/profile Flink ","permalink":"https://lzhuii.github.io/posts/hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E5%8D%95%E6%9C%BA/","summary":"系统配置 软件 1 dnf install -y tar vim wget 网络 1 2 vim /etc/hosts 192.168.1.10 data 防火墙 1 2 3 4 systemctl stop firewalld systemctl disable firewalld setenforce 0 iptables -F 用户 1 2 3 4 5 6 7 8 9 10 11 mkdir /user useradd -d /user/hadoop -m hadoop passwd hadoop visudo hadoop ALL=(ALL) NOPASSWD: ALL su hadoop ssh-keygen -t rsa -P \u0026#39;\u0026#39; -f ~/.ssh/id_rsa cat ~/.ssh/id_rsa.pub \u0026gt;\u0026gt; ~/.ssh/authorized_keys chmod 0600 ~/.","title":"Hadoop 大数据平台搭建过程（单机）"},{"content":" 创建安装目录\n1 sudo mkdir -p /usr/local/minio/{bin,conf,data} 创建 minio 用户\n1 2 3 sudo useradd minio sudo chown -R minio:minio /usr/local/minio sudo su minio 下载 MinIO\n1 2 3 4 wget -O /usr/local/minio/bin/minio https://dl.min.io/server/minio/release/linux-amd64/minio wget -O /usr/local/minio/bin/mc https://dl.min.io/client/mc/release/linux-amd64/mc chmod +x minio chmod +x mc 创建 MinIO 配置文件\n1 vim /usr/local/minio/conf/minio.conf 1 2 3 4 5 6 MINIO_ROOT_USER=用户 MINIO_ROOT_PASSWORD=密码 MINIO_VOLUMES=\u0026#34;/usr/local/minio/data\u0026#34; MINIO_SERVER_URL=\u0026#34;https://oss.lzhui.top\u0026#34; MINIO_BROWSER_REDIRECT_URL=\u0026#34;https://oss.lzhui.top/minio/ui\u0026#34; MINIO_OPTS=\u0026#34;--address :9000 --console-address :9001\u0026#34; 创建 MinIO 服务\n1 sudo vim /etc/systemd/system/minio.service 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 [Unit] Description=MinIO Documentation=https://min.io/docs/minio/linux/index.html Wants=network-online.target After=network-online.target AssertFileIsExecutable=/usr/local/minio/bin/minio [Service] User=minio Group=minio ProtectProc=invisible EnvironmentFile=-/usr/local/minio/conf/minio.conf ExecStart=/usr/local/minio/bin/minio server $MINIO_OPTS $MINIO_VOLUMES Restart=always LimitNOFILE=65536 TasksMax=infinity TimeoutStopSec=infinity SendSIGKILL=no [Install] WantedBy=multi-user.target 配置 Nginx 代理\n1 sudo vim /usr/local/nginx/conf.d/minio.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 server { listen 443 ssl; listen [::]:443 ssl; server_name oss.lzhui.top; ssl_certificate /usr/local/nginx/cert/lzhui.top.pem; ssl_certificate_key /usr/local/nginx/cert/lzhui.top.key; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; ssl_prefer_server_ciphers on; # Allow special characters in headers ignore_invalid_headers off; # Allow any size file to be uploaded. # Set to a value such as 1000m; to restrict file size to a specific value client_max_body_size 0; # Disable buffering proxy_buffering off; proxy_request_buffering off; location / { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_connect_timeout 300; # Default is HTTP/1, keepalive is only enabled in HTTP/1.1 proxy_http_version 1.1; proxy_set_header Connection \u0026#34;\u0026#34;; chunked_transfer_encoding off; proxy_pass http://127.0.0.1:9000/; # This uses the upstream directive definition to load balance } location /minio/ui/ { rewrite ^/minio/ui/(.*) /$1 break; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-NginX-Proxy true; # This is necessary to pass the correct IP to be hashed real_ip_header X-Real-IP; proxy_connect_timeout 300; # To support websockets in MinIO versions released after January 2023 proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \u0026#34;upgrade\u0026#34;; # Some environments may encounter CORS errors (Kubernetes + Nginx Ingress) # Uncomment the following line to set the Origin request to an empty string # proxy_set_header Origin \u0026#39;\u0026#39;; chunked_transfer_encoding off; proxy_pass http://127.0.0.1:9001/; # This uses the upstream directive definition to load balance } } 启动\n1 2 3 sudo systemctl restart nginx sudo systemctl start minio sudo systemctl enable minio ","permalink":"https://lzhuii.github.io/posts/linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85minio/","summary":"创建安装目录\n1 sudo mkdir -p /usr/local/minio/{bin,conf,data} 创建 minio 用户\n1 2 3 sudo useradd minio sudo chown -R minio:minio /usr/local/minio sudo su minio 下载 MinIO\n1 2 3 4 wget -O /usr/local/minio/bin/minio https://dl.min.io/server/minio/release/linux-amd64/minio wget -O /usr/local/minio/bin/mc https://dl.min.io/client/mc/release/linux-amd64/mc chmod +x minio chmod +x mc 创建 MinIO 配置文件\n1 vim /usr/local/minio/conf/minio.conf 1 2 3 4 5 6 MINIO_ROOT_USER=用户 MINIO_ROOT_PASSWORD=密码 MINIO_VOLUMES=\u0026#34;/usr/local/minio/data\u0026#34; MINIO_SERVER_URL=\u0026#34;https://oss.lzhui.top\u0026#34; MINIO_BROWSER_REDIRECT_URL=\u0026#34;https://oss.lzhui.top/minio/ui\u0026#34; MINIO_OPTS=\u0026#34;--address :9000 --console-address :9001\u0026#34; 创建 MinIO 服务\n1 sudo vim /etc/systemd/system/minio.","title":"Linux 系统中安装 MinIO"},{"content":"开发工具 JetBrains 软件开发人员和团队的必备工具 Visual Studio Code Git Maven Java Python Node.js 接口测试 Postman 终端 MobaXterm 虚拟机 VMware Workstation Pro 笔记 Typora 一款 Markdown 编辑器和阅读器 PicGo Hugo 办公 WPS 网易邮箱 游戏 Steam Epic 游戏加加 实时桌面监测硬件数据状态 科学上网 v2RayN v2RayNG ","permalink":"https://lzhuii.github.io/posts/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95/","summary":"开发工具 JetBrains 软件开发人员和团队的必备工具 Visual Studio Code Git Maven Java Python Node.js 接口测试 Postman 终端 MobaXterm 虚拟机 VMware Workstation Pro 笔记 Typora 一款 Markdown 编辑器和阅读器 PicGo Hugo 办公 WPS 网易邮箱 游戏 Steam Epic 游戏加加 实时桌面监测硬件数据状态 科学上网 v2RayN v2RayNG ","title":"常用软件清单"},{"content":"集群规划 节点 hadoop101 hadoop102 hadoop103 IP 192.168.1.101 192.168.1.102 192.168.1.103 配置 8C 16G 4C 8G 4C 8G 组件 NameNode SecondaryNameNode ResourceManager DataNode DataNode DataNode NodeManager NodeManager NodeManager MySQL、Hive 安装系统 下载系统镜像 Anolis OS 8.8\n创建虚拟机 创建虚拟机 hadoop101\n系统通用配置 安装必要的软件，关闭防火墙\n1 2 3 4 5 6 dnf install -y tar vim wget systemctl stop firewalld systemctl disable firewalld setenforce 0 iptables -F 配置 hosts\n1 vim /etc/hosts 1 2 3 192.168.1.101 hadoop101 192.168.1.102 hadoop102 192.168.1.103 hadoop103 配置主机名\n1 vim /etc/hostname 1 hadoop101 配置静态地址\n1 vim /etc/sysconfig/network-scripts/ifcfg-ens33 1 2 3 4 5 ...... IPADDR=192.168.1.101 PREFIX=24 GATEWAY=192.168.1.1 DNS1=192.168.1.1 创建 hadoop 用户 创建用户\n1 2 3 4 5 mkdir /user useradd -d /user/hadoop -m hadoop passwd hadoop 123456 123456 添加 sudo 权限\n1 2 visudo hadoop ALL=(ALL) NOPASSWD: ALL 克隆虚拟机 创建 hadoop101 的快照，克隆虚拟机 hadoop102、hadoop103，并修改为 4C 8G\n修改 hadoop102、hadoop103 的 IP 和主机名\n登录三台服务器，配置 SSH 免密登录\n1 2 3 4 5 # hadoop 用户 ssh-keygen -t rsa -P \u0026#39;\u0026#39; -f ~/.ssh/id_rsa ssh-copy-id hadoop101 ssh-copy-id hadoop102 ssh-copy-id hadoop103 安装集群 使用 MobaXterm 的 Multi-execution mode 功能同时操作三台服务器\n安装 Java 8 下载 Java 8\n解压并配置环境变量\n1 2 3 4 5 6 7 8 9 sudo tar xvf jdk-8u381-linux-x64.tar.gz -C /usr/local/ sudo vim /etc/profile.d/server.sh # JAVA 8 export JAVA_HOME=/usr/local/jdk1.8.0_381 export PATH=$PATH:$JAVA_HOME/bin source /etc/profile java -version 安装 Hadoop 3.3.6 下载 Hadoop 3.3.6\n解压并配置环境变量\n1 2 3 4 5 6 7 8 9 10 sudo tar xvf hadoop-3.3.6.tar.gz -C /usr/local/ sudo vim /etc/profile.d/server.sh # HADOOP 3.3.6 export HADOOP_HOME=/usr/local/hadoop-3.3.6 export PATH=$PATH:$HADOOP_HOME/bin export PATH=$PATH:$HADOOP_HOME/sbin source /etc/profile hadoop version 修改配置文件\nhadoop-env.sh 1 vim $HADOOP_HOME/etc/hadoop/hadoop-env.sh 1 export JAVA_HOME=/usr/local/jdk1.8.0_381 core-site.xml 1 vim $HADOOP_HOME/etc/hadoop/core-site.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;?xml-stylesheet type=\u0026#34;text/xsl\u0026#34; href=\u0026#34;configuration.xsl\u0026#34;?\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;fs.defaultFS\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;hdfs://hadoop101:8020\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hadoop.tmp.dir\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;/usr/local/hadoop-3.3.6/data\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hadoop.http.staticuser.user\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;hadoop\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hadoop.proxyuser.hadoop.hosts\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;*\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hadoop.proxyuser.hadoop.groups\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;*\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; hdfs-site.xml 1 vim $HADOOP_HOME/etc/hadoop/hdfs-site.xml 1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;?xml-stylesheet type=\u0026#34;text/xsl\u0026#34; href=\u0026#34;configuration.xsl\u0026#34;?\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;dfs.namenode.http-address\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;hadoop101:9870\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;dfs.namenode.secondary.http-address\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;hadoop102:9868\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; mapred-site.xml 1 vim $HADOOP_HOME/etc/hadoop/mapred-site.xml 1 2 3 4 5 6 7 8 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;?xml-stylesheet type=\u0026#34;text/xsl\u0026#34; href=\u0026#34;configuration.xsl\u0026#34;?\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;mapreduce.framework.name\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;yarn\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; yarn-site.xml 1 vim $HADOOP_HOME/etc/hadoop/yarn-site.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;?xml-stylesheet type=\u0026#34;text/xsl\u0026#34; href=\u0026#34;configuration.xsl\u0026#34;?\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;yarn.nodemanager.aux-services\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;mapreduce_shuffle\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;yarn.resourcemanager.hostname\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;hadoop103\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;yarn.nodemanager.env-whitelist\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; workers 1 vim $HADOOP_HOME/etc/hadoop/workers 1 2 3 hadoop101 hadoop102 hadoop103 在 hadoop101 节点启动 HDFS、在 hadoop103 节点启动 YARN\n1 2 3 4 5 6 7 8 9 10 11 # hadoop101 hdfs namenode -format start-dfs.sh hdfs dfs -mkdir -p /user/hadoop hdfs dfs -chown -R hadoop:hadoop /user/hadoop hdfs dfs -mkdir -p /user/hive/warehouse hdfs dfs -chown -R hadoop:hadoop /user/hive # hadoop103 start-yarn.sh 检查 HDFS 和 YARN 的进程是否正确启动\n访问\nhttp://hadoop101:9870\nhttp://hadoop103:8088\n安装 MySQL 8.0 安装 mysql-server 并修改 root 密码\n1 2 3 4 5 6 7 8 9 # 安装 mysql-server sudo dnf install -y mysql-server # 启动 mysqld 服务 sudo systemctl start mysqld # 修改 root 密码 sudo mysqladmin -u root -p password # 默认为空 # 123456 # 123456 开启远程访问，创建 hive 元数据库\n1 2 3 4 5 6 mysql -uroot -p123456 use mysql; update user set host = \u0026#39;%\u0026#39; where user = \u0026#39;root\u0026#39;; flush privileges; create database metastore; exit 安装 Hive 3.1.3 下载 Hive 3.1.3\n解压并配置环境变量\n1 2 3 4 5 6 7 8 9 10 11 sudo tar xvf apache-hive-3.1.3-bin.tar.gz -C /usr/local sudo mv /usr/local/apache-hive-3.1.3-bin /usr/local/hive-3.1.3 sudo chown -R hadoop:hadoop /usr/local/hive-3.1.3 sudo vim /etc/profile.d/server.sh # HIVE 3.1.3 export HIVE_HOME=/usr/local/hive-3.1.3 export PATH=$PATH:$HIVE_HOME/bin source /etc/profile hive --version 创建 hive 配置文件\n1 vim $HIVE_HOME/conf/hive-site.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;?xml-stylesheet type=\u0026#34;text/xsl\u0026#34; href=\u0026#34;configuration.xsl\u0026#34;?\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;javax.jdo.option.ConnectionURL\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;jdbc:mysql://hadoop101:3306/metastore?useSSL=false\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;javax.jdo.option.ConnectionDriverName\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;com.mysql.jdbc.Driver\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;javax.jdo.option.ConnectionUserName\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;root\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;javax.jdo.option.ConnectionPassword\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;123456\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.metastore.schema.verification\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;false\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.metastore.event.db.notification.api.auth\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;false\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.metastore.warehouse.dir\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;/user/hive/warehouse\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.metastore.uris\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;thrift://hadoop101:9083\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.server2.thrift.bind.host\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;hadoop101\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.server2.thrift.port\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;10000\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.cli.print.header\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;true\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;property\u0026gt; \u0026lt;name\u0026gt;hive.cli.print.current.db\u0026lt;/name\u0026gt; \u0026lt;value\u0026gt;true\u0026lt;/value\u0026gt; \u0026lt;/property\u0026gt; \u0026lt;/configuration\u0026gt; 在 hadoop101 节点初始化 hive 元数据库，启动 hive\n1 2 3 4 5 wget -O $HIVE_HOME/lib/mysql-connector-java-5.1.49.jar https://oss.lzhui.top/common/mysql-connector-java-5.1.49.jar schematool -initSchema -dbType mysql -verbose mkdir -p $HIVE_HOME/log nohup hive --service metastore \u0026gt; $HIVE_HOME/log/metastore.log 2\u0026gt;\u0026amp;1 \u0026amp; nohup hive --service hiveserver2 \u0026gt; $HIVE_HOME/log/hiveserver2.log 2\u0026gt;\u0026amp;1 \u0026amp; 安装 Spark 3.5.0 下载 Spark 3.5.0\n解压并配置环境变量\n1 2 sudo tar xvf spark-3.5.0-bin-hadoop3-scala2.13.tgz -C /usr/local sudo mv /usr/local/spark-3.5.0-bin-hadoop3-scala2.13 /usr/local/spark-3.5.0 快速搭建脚本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 # hadoop101 hadoop102 hadoop103 sudo tar xvf jdk-8u381-linux-x64.tar.gz -C /usr/local sudo tar xvf hadoop-3.3.6.tar.gz -C /usr/local sudo tar xvf apache-hive-3.1.3-bin.tar.gz -C /usr/local sudo mv /usr/local/apache-hive-3.1.3-bin /usr/local/hive-3.1.3 sudo chown -R hadoop:hadoop /usr/local/hive-3.1.3 sudo wget -O /etc/profile.d/server.sh https://oss.lzhui.top/common/server.sh source /etc/profile java -version hadoop version hive --version wget -O $HADOOP_HOME/etc/hadoop/hadoop-env.sh https://oss.lzhui.top/common/hadoop-env.sh wget -O $HADOOP_HOME/etc/hadoop/workers https://oss.lzhui.top/common/workers wget -O $HADOOP_HOME/etc/hadoop/core-site.xml https://oss.lzhui.top/common/core-site.xml wget -O $HADOOP_HOME/etc/hadoop/hdfs-site.xml https://oss.lzhui.top/common/hdfs-site.xml wget -O $HADOOP_HOME/etc/hadoop/mapred-site.xml https://oss.lzhui.top/common/mapred-site.xml wget -O $HADOOP_HOME/etc/hadoop/yarn-site.xml https://oss.lzhui.top/common/yarn-site.xml wget -O $HIVE_HOME/conf/hive-site.xml https://oss.lzhui.top/common/hive-site.xml wget -O $HIVE_HOME/lib/mysql-connector-java-5.1.49.jar https://oss.lzhui.top/common/mysql-connector-java-5.1.49.jar # hadoop101 hdfs namenode -format start-dfs.sh hdfs dfs -mkdir -p /user/hadoop hdfs dfs -chown -R hadoop:hadoop /user/hadoop hdfs dfs -mkdir -p /user/hive/warehouse hdfs dfs -chown -R hadoop:hadoop /user/hive sudo dnf install -y mysql-server sudo systemctl start mysqld mysql -u root alter user \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; identified by \u0026#39;123456\u0026#39;; use mysql; update user set host = \u0026#39;%\u0026#39; where user = \u0026#39;root\u0026#39;; flush privileges; create database metastore; exit schematool -initSchema -dbType mysql -verbose mkdir -p $HIVE_HOME/log nohup hive --service metastore \u0026gt; $HIVE_HOME/log/metastore.log 2\u0026gt;\u0026amp;1 \u0026amp; nohup hive --service hiveserver2 \u0026gt; $HIVE_HOME/log/hiveserver2.log 2\u0026gt;\u0026amp;1 \u0026amp; # hadoop103 start-yarn.sh ","permalink":"https://lzhuii.github.io/posts/hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E9%9B%86%E7%BE%A4/","summary":"集群规划 节点 hadoop101 hadoop102 hadoop103 IP 192.168.1.101 192.168.1.102 192.168.1.103 配置 8C 16G 4C 8G 4C 8G 组件 NameNode SecondaryNameNode ResourceManager DataNode DataNode DataNode NodeManager NodeManager NodeManager MySQL、Hive 安装系统 下载系统镜像 Anolis OS 8.8\n创建虚拟机 创建虚拟机 hadoop101\n系统通用配置 安装必要的软件，关闭防火墙\n1 2 3 4 5 6 dnf install -y tar vim wget systemctl stop firewalld systemctl disable firewalld setenforce 0 iptables -F 配置 hosts\n1 vim /etc/hosts 1 2 3 192.168.1.101 hadoop101 192.168.1.102 hadoop102 192.","title":"Hadoop 大数据平台搭建过程（集群）"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 set number \u0026#34;显示行号 set relativenumber \u0026#34;显示相对行号 set ruler \u0026#34;显示标尺 set showcmd \u0026#34;显示命令 set nocompatible \u0026#34;取消vi一致性 set wildmenu \u0026#34;增强模式中的命令行自动完成操作 set showmatch \u0026#34;高亮匹配括号 set ignorecase \u0026#34;搜索忽略大小写 set nohlsearch \u0026#34;不要高亮被搜索的句子 set incsearch \u0026#34;在搜索时，输入的词句的逐字符高亮 set autoindent \u0026#34;继承前一行的缩进方式 set smartindent \u0026#34;为C程序提供自动缩进 set cindent \u0026#34;使用C样式的缩进 set tabstop=4 \u0026#34;制表符 set softtabstop=4 \u0026#34;统一缩进 set shiftwidth=4 \u0026#34;统一缩进 set nowrap \u0026#34;不要换行 set smarttab \u0026#34;在行和段开始处使用制表符 syntax on \u0026#34;语法高亮 filetype on \u0026#34;侦测文件类型 filetype plugin on \u0026#34;侦测插件文件类型 ","permalink":"https://lzhuii.github.io/posts/vim%E9%85%8D%E7%BD%AE/","summary":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 set number \u0026#34;显示行号 set relativenumber \u0026#34;显示相对行号 set ruler \u0026#34;显示标尺 set showcmd \u0026#34;显示命令 set nocompatible \u0026#34;取消vi一致性 set wildmenu \u0026#34;增强模式中的命令行自动完成操作 set showmatch \u0026#34;高亮匹配括号 set ignorecase \u0026#34;搜索忽略大小写 set nohlsearch \u0026#34;不要高亮被搜索的句子 set incsearch \u0026#34;在搜索时，输入的词句的逐字符高亮 set autoindent \u0026#34;继承前一行的缩进方式 set smartindent \u0026#34;为C程序提供自动缩进 set cindent \u0026#34;使用C样式的缩进 set tabstop=4 \u0026#34;制表符 set softtabstop=4 \u0026#34;统一缩进 set shiftwidth=4 \u0026#34;统一缩进 set nowrap \u0026#34;不要换行 set smarttab \u0026#34;在行和段开始处使用制表符 syntax on \u0026#34;语法高亮 filetype on \u0026#34;侦测文件类型 filetype plugin on \u0026#34;侦测插件文件类型 ","title":"Vim 配置文件"},{"content":" 创建数据库\n1 mysql -u root -p 1 2 3 4 5 CREATE USER \u0026#39;gitea\u0026#39; IDENTIFIED BY \u0026#39;密码\u0026#39;; CREATE DATABASE gitea CHARACTER SET \u0026#39;utf8mb4\u0026#39; COLLATE \u0026#39;utf8mb4_unicode_ci\u0026#39;; GRANT ALL PRIVILEGES ON gitea.* TO \u0026#39;gitea\u0026#39;; FLUSH PRIVILEGES; EXIT 创建工作路径，下载 Gitea，安装 Git，创建 git 用户\n1 2 3 4 5 6 7 sudo mkdir -p /usr/local/gitea/{bin,conf,custom,data,log} sudo wget -O /usr/local/gitea/bin/gitea https://dl.gitea.com/gitea/1.21.0/gitea-1.21.0-linux-amd64 sudo chmod +x /usr/local/gitea/bin/gitea sudo dnf install -y git sudo useradd git sudo chown -R git:git /usr/local/gitea sudo chmod -R 750 /usr/local/gitea 创建 Gitea 服务\n1 sudo vim /etc/systemd/system/gitea.service 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 [Unit] Description=Gitea After=syslog.target After=network.target Wants=mysqld.service After=mysqld.service [Service] User=git Group=git Type=simple WorkingDirectory=/usr/local/gitea Environment=USER=git HOME=/home/git GITEA_WORK_DIR=/usr/local/gitea ExecStart=/usr/local/gitea/bin/gitea web --config /usr/local/gitea/conf/app.ini Restart=always RestartSec=1s [Install] WantedBy=multi-user.target 配置 Nginx 代理\n1 sudo vim /usr/local/nginx/conf.d/gitea.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 server { listen 443 ssl http2; listen [::]:443 ssl http2; server_name git.lzhui.top; ssl_certificate /usr/local/nginx/cert/lzhui.top.pem; ssl_certificate_key /usr/local/nginx/cert/lzhui.top.key; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; ssl_prefer_server_ciphers on; location / { proxy_pass http://127.0.0.1:3000/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } } 启动 Gitea\n1 2 3 sudo systemctl restart nginx sudo systemctl start gitea sudo systemctl enable gitea 下载，安装 act_runner\n1 2 3 4 5 sudo mkdir -p /usr/local/act_runner/{bin,conf,log} sudo wget -O /usr/local/act_runner/bin/act_runner https://dl.gitea.com/act_runner/0.2.6/act_runner-0.2.6-linux-amd64 sudo chmod +x /usr/local/act_runner/bin/act_runner sudo chown -R git:git /usr/local/act_runner sudo chmod -R 750 /usr/local/act_runner 配置开启 Gitea Actions\n1 sudo vim /usr/local/gitea/conf/app.ini 1 2 [actions] ENABLED=true 注册 act_runner\n1 2 3 4 5 6 7 8 9 sudo systemctl restart gitea sudo su git cd /usr/local/act_runner ./bin/act_runner generate-config \u0026gt; ./conf/config.yaml ./bin/act_runner -c ./conf/config.yaml register # gitea地址 https://git.lzhui.top # token # runner名称 默认 # 标签 linux 创建 act_runner 服务\n1 sudo vim /etc/systemd/system/act_runner.service 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [Unit] Description=Gitea Actions runner Documentation=https://gitea.com/gitea/act_runner [Service] User=git Group=git Environment=\u0026#34;PATH=/usr/local/bin:/usr/bin:/bin:/home/git/.local/bin:/usr/local/node-v20.10.0-linux-x64/bin\u0026#34; ExecStart=/usr/local/act_runner/bin/act_runner daemon --config /usr/local/act_runner/conf/config.yaml ExecReload=/bin/kill -s HUP $MAINPID WorkingDirectory=/usr/local/act_runner TimeoutSec=0 RestartSec=10 Restart=always [Install] WantedBy=multi-user.target 启动 act_runner\n1 2 sudo systemctl start act_runner sudo systemctl enable act_runner ","permalink":"https://lzhuii.github.io/posts/linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85gitea/","summary":"创建数据库\n1 mysql -u root -p 1 2 3 4 5 CREATE USER \u0026#39;gitea\u0026#39; IDENTIFIED BY \u0026#39;密码\u0026#39;; CREATE DATABASE gitea CHARACTER SET \u0026#39;utf8mb4\u0026#39; COLLATE \u0026#39;utf8mb4_unicode_ci\u0026#39;; GRANT ALL PRIVILEGES ON gitea.* TO \u0026#39;gitea\u0026#39;; FLUSH PRIVILEGES; EXIT 创建工作路径，下载 Gitea，安装 Git，创建 git 用户\n1 2 3 4 5 6 7 sudo mkdir -p /usr/local/gitea/{bin,conf,custom,data,log} sudo wget -O /usr/local/gitea/bin/gitea https://dl.gitea.com/gitea/1.21.0/gitea-1.21.0-linux-amd64 sudo chmod +x /usr/local/gitea/bin/gitea sudo dnf install -y git sudo useradd git sudo chown -R git:git /usr/local/gitea sudo chmod -R 750 /usr/local/gitea 创建 Gitea 服务","title":"Linux 系统中安装 Gitea"},{"content":" 下载 Hugo\nhttps://github.com/gohugoio/hugo\n1 2 tar xvf hugo_extended_0.121.1_linux-amd64.tar.gz sudo mv hugo /usr/local/bin 创建站点\n1 2 3 sudo chmod o+w /usr/local/nginx/html cd /usr/local/nginx/html hugo new site blog --format yaml 下载主题\n1 2 3 4 cd /usr/local/nginx/html/blog/ git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive git submodule update --remote --merge 修改配置文件\n1 vim /usr/local/nginx/html/blog/hugo.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 baseURL: \u0026#34;https://lzhui.top/\u0026#34; title: 临渊羡鱼 paginate: 5 theme: PaperMod languageCode: zh-cn defaultContentLanguage: zh timeZone: Asia/Shanghai enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false cleanDestinationDir: true googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true outputs: home: - HTML - RSS - JSON # is necessary params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: 临渊羡鱼 description: \u0026#34;一个正在路上的程序猿\u0026#34; keywords: [Blog, Portfolio, PaperMod] author: 临渊羡鱼 images: [\u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34;] DateFormat: \u0026#34;2006年01月02日 15:04:05\u0026#34; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false ShowWordCount: true ShowRssButtonInSectionTermList: true UseHugoToc: true disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon16x16: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon32x32: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; apple_touch_icon: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; safari_pinned_tab: \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; label: text: \u0026#34;临渊羡鱼\u0026#34; icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: true # needs to be explicitly set title: 临渊羡鱼 subtitle: \u0026#34;一个正在路上的程序猿\u0026#34; imageUrl: \u0026#34;img/avatar.jpg\u0026#34; imageWidth: 120 imageHeight: 120 imageTitle: buttons: - name: 文章 url: posts - name: 标签 url: tags - name: 时间轴 url: archives # home-info mode homeInfoParams: Title: \u0026#39;临渊羡鱼\u0026#39; Content: \u0026#39;一个正在路上的程序猿\u0026#39; socialIcons: - name: github url: \u0026#34;https://github.com/lzhuii\u0026#34; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;] menu: main: - identifier: tags name: 标签 url: /tags/ weight: 1 - identifier: archives name: 时间轴 url: /archives/ weight: 2 - identifier: search name: 搜索 url: /search/ weight: 3 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma pygmentsUseClasses: true markup: highlight: noClasses: false # anchorLineNos: true # codeFences: true guessSyntax: true lineNos: true style: monokai 编写文章\n/usr/local/nginx/html/blog/content/posts 目录下上传 markdown 文档\n生成网站\n1 2 cd /usr/local/nginx/html/blog hugo 安装foottools，配置字体\n1 2 3 4 5 6 7 sudo mkdir -p /usr/share/fonts # sftp上传字体文件 LXGWWenKai-Regular.ttf pip install fontTools # 提取字体 find /usr/local/nginx/html/blog/public -type f -name \u0026#34;*[html,css,js,json,txt]\u0026#34; | xargs cat \u0026gt;\u0026gt; tmp.txt fonttools subset \u0026#34;/usr/share/fonts/LXGWWenKai-Regular.ttf\u0026#34; --text-file=\u0026#34;tmp.txt\u0026#34; --output-file=\u0026#34;/usr/local/nginx/html/blog/public/fonts/LXGWWenKai-Regular.ttf\u0026#34; ","permalink":"https://lzhuii.github.io/posts/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","summary":"下载 Hugo\nhttps://github.com/gohugoio/hugo\n1 2 tar xvf hugo_extended_0.121.1_linux-amd64.tar.gz sudo mv hugo /usr/local/bin 创建站点\n1 2 3 sudo chmod o+w /usr/local/nginx/html cd /usr/local/nginx/html hugo new site blog --format yaml 下载主题\n1 2 3 4 cd /usr/local/nginx/html/blog/ git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive git submodule update --remote --merge 修改配置文件\n1 vim /usr/local/nginx/html/blog/hugo.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 baseURL: \u0026#34;https://lzhui.","title":"使用 Hugo 搭建博客"},{"content":" 下载 Java 21\n1 wget https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.tar.gz 解压 Java 17\n1 sudo tar xvf jdk-21_linux-x64_bin.tar.gz -C /usr/local 配置环境变量\n1 sudo vim /etc/profile.d/ecs.sh 1 2 3 # JAVA 21 export JAVA_HOME=/usr/local/jdk-21.0.1 export PATH=$PATH:$JAVA_HOME/bin 刷新环境变量\n1 source /etc/profile 验证是否安装成功\n1 java -version ","permalink":"https://lzhuii.github.io/posts/linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85java21/","summary":" 下载 Java 21\n1 wget https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.tar.gz 解压 Java 17\n1 sudo tar xvf jdk-21_linux-x64_bin.tar.gz -C /usr/local 配置环境变量\n1 sudo vim /etc/profile.d/ecs.sh 1 2 3 # JAVA 21 export JAVA_HOME=/usr/local/jdk-21.0.1 export PATH=$PATH:$JAVA_HOME/bin 刷新环境变量\n1 source /etc/profile 验证是否安装成功\n1 java -version ","title":"Linux 系统中安装 Java 21"},{"content":" 下载 Maven\n1 wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz 解压 Maven\n1 sudo tar xvf apache-maven-3.9.6-bin.tar.gz -C /usr/local 配置环境变量\n1 sudo vim /etc/profile.d/ecs.sh 1 2 3 # MAVEN export MAVEN_HOME=/usr/local/apache-maven-3.9.6 export PATH=$PATH:$MAVEN_HOME/bin 刷新环境变量\n1 source /etc/profile 验证\n1 mvn -v ","permalink":"https://lzhuii.github.io/posts/linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85maven/","summary":" 下载 Maven\n1 wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz 解压 Maven\n1 sudo tar xvf apache-maven-3.9.6-bin.tar.gz -C /usr/local 配置环境变量\n1 sudo vim /etc/profile.d/ecs.sh 1 2 3 # MAVEN export MAVEN_HOME=/usr/local/apache-maven-3.9.6 export PATH=$PATH:$MAVEN_HOME/bin 刷新环境变量\n1 source /etc/profile 验证\n1 mvn -v ","title":"Linux 系统中安装 Maven"},{"content":" 安装 MySQL\n1 sudo dnf install -y mysql-server 修改默认端口\n1 sudo vim /etc/my.cnf.d/mysql-server.cnf 1 2 [mysqld] port=端口 启动 MySQL\n1 sudo systemctl start mysqld 修改 root 密码\n1 2 3 4 sudo mysqladmin -u root -p password #旧密码(默认是空) #新密码 #确认密码 创建远程登陆用户\n1 CREATE USER \u0026#39;用户\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;密码\u0026#39;; ","permalink":"https://lzhuii.github.io/posts/linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85mysql8.0/","summary":" 安装 MySQL\n1 sudo dnf install -y mysql-server 修改默认端口\n1 sudo vim /etc/my.cnf.d/mysql-server.cnf 1 2 [mysqld] port=端口 启动 MySQL\n1 sudo systemctl start mysqld 修改 root 密码\n1 2 3 4 sudo mysqladmin -u root -p password #旧密码(默认是空) #新密码 #确认密码 创建远程登陆用户\n1 CREATE USER \u0026#39;用户\u0026#39;@\u0026#39;%\u0026#39; IDENTIFIED BY \u0026#39;密码\u0026#39;; ","title":"Linux 系统中安装 MySQL 8.0"},{"content":" 安装依赖\n1 sudo dnf install -y zlib-devel pcre-devel openssl-devel 下载 Nginx 源码\n1 wget https://nginx.org/download/nginx-1.24.0.tar.gz 解压 Nginx 源码\n1 sudo tar xvf nginx-1.24.0.tar.gz -C /usr/local/src 编译安装\n1 2 3 4 cd /usr/local/src/nginx-1.24.0 sudo ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module sudo make -j 4 sudo make install 创建 nginx 用户\n1 sudo useradd nginx 安装 SSL 证书\n1 2 sudo mkdir /usr/local/nginx/conf/cert # sftp上传证书 修改 Nginx 配置文件\n1 sudo vim /usr/local/nginx/conf/nginx.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 user nginx; worker_processes 1; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; gzip on; server { listen 80; listen [::]:80; server_name lzhui.top; return 301 https://$host$request_uri; } server { listen 443 ssl http2; listen [::]:443 ssl http2; server_name lzhui.top; ssl_certificate /usr/local/nginx/cert/lzhui.top.pem; ssl_certificate_key /usr/local/nginx/cert/lzhui.top.key; ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_prefer_server_ciphers on; location / { root /usr/local/nginx/html/blog; index index.html index.htm; } } include /usr/local/nginx/conf.d/*.conf; } 创建 nginx 服务\n1 sudo vim /etc/systemd/system/nginx.service 1 2 3 4 5 6 7 8 9 10 11 12 13 14 [Unit] Description=Nginx After=network.target [Service] Type=forking ExecStartPre=/usr/local/nginx/sbin/nginx -t ExecStart=/usr/local/nginx/sbin/nginx ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s stop PrivateTmp=true [Install] WantedBy=multi-user.target 启动 Nginx\n1 2 sudo systemctl start nginx sudo systemctl enable nginx ","permalink":"https://lzhuii.github.io/posts/linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85nginx/","summary":"安装依赖\n1 sudo dnf install -y zlib-devel pcre-devel openssl-devel 下载 Nginx 源码\n1 wget https://nginx.org/download/nginx-1.24.0.tar.gz 解压 Nginx 源码\n1 sudo tar xvf nginx-1.24.0.tar.gz -C /usr/local/src 编译安装\n1 2 3 4 cd /usr/local/src/nginx-1.24.0 sudo ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module sudo make -j 4 sudo make install 创建 nginx 用户\n1 sudo useradd nginx 安装 SSL 证书\n1 2 sudo mkdir /usr/local/nginx/conf/cert # sftp上传证书 修改 Nginx 配置文件\n1 sudo vim /usr/local/nginx/conf/nginx.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 user nginx; worker_processes 1; events { worker_connections 1024; } http { include mime.","title":"Linux 系统中安装 Nginx"},{"content":" 下载 Node.js\n1 wget https://nodejs.org/dist/v20.10.0/node-v20.10.0-linux-x64.tar.xz 解压 Node.js\n1 sudo tar xvf node-v20.10.0-linux-x64.tar.xz -C /usr/local 配置环境变量\n1 sudo vim /etc/profile.d/ecs.sh 1 2 3 # NODE export NODE_HOME=/usr/local/node-v20.10.0-linux-x64 export PATH=$PATH:$NODE_HOME/bin 刷新环境变量\n1 source /etc/profile 验证\n1 2 node -v npm -v ","permalink":"https://lzhuii.github.io/posts/linux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E5%AE%89%E8%A3%85node.js/","summary":" 下载 Node.js\n1 wget https://nodejs.org/dist/v20.10.0/node-v20.10.0-linux-x64.tar.xz 解压 Node.js\n1 sudo tar xvf node-v20.10.0-linux-x64.tar.xz -C /usr/local 配置环境变量\n1 sudo vim /etc/profile.d/ecs.sh 1 2 3 # NODE export NODE_HOME=/usr/local/node-v20.10.0-linux-x64 export PATH=$PATH:$NODE_HOME/bin 刷新环境变量\n1 source /etc/profile 验证\n1 2 node -v npm -v ","title":"Linux 系统中安装 Node.js"},{"content":"镜像站 阿里巴巴开源镜像站 校园网联合镜像站 npm 1 npm config set registry https://registry.npmmirror.com pip 1 2 sudo python -m pip install -i https://mirrors.bfsu.edu.cn/pypi/web/simple --upgrade pip pip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple maven 1 2 3 4 5 6 \u0026lt;mirror\u0026gt; \u0026lt;id\u0026gt;aliyunmaven\u0026lt;/id\u0026gt; \u0026lt;mirrorOf\u0026gt;*\u0026lt;/mirrorOf\u0026gt; \u0026lt;name\u0026gt;阿里云公共仓库\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;https://maven.aliyun.com/repository/public\u0026lt;/url\u0026gt; \u0026lt;/mirror\u0026gt; git 1 git config --global http.https://github.com/.proxy http://127.0.0.1:10809 ","permalink":"https://lzhuii.github.io/posts/%E5%9B%BD%E5%86%85%E6%BA%90%E5%92%8C%E4%BB%A3%E7%90%86/","summary":"镜像站 阿里巴巴开源镜像站 校园网联合镜像站 npm 1 npm config set registry https://registry.npmmirror.com pip 1 2 sudo python -m pip install -i https://mirrors.bfsu.edu.cn/pypi/web/simple --upgrade pip pip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple maven 1 2 3 4 5 6 \u0026lt;mirror\u0026gt; \u0026lt;id\u0026gt;aliyunmaven\u0026lt;/id\u0026gt; \u0026lt;mirrorOf\u0026gt;*\u0026lt;/mirrorOf\u0026gt; \u0026lt;name\u0026gt;阿里云公共仓库\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;https://maven.aliyun.com/repository/public\u0026lt;/url\u0026gt; \u0026lt;/mirror\u0026gt; git 1 git config --global http.https://github.com/.proxy http://127.0.0.1:10809 ","title":"国内源和代理"}]